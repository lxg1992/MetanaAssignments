{
  "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "ValueChanged",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "_indexes",
          "type": "uint256[]"
        },
        {
          "internalType": "uint8[]",
          "name": "_values",
          "type": "uint8[]"
        }
      ],
      "name": "alterMultipleNumbers8bit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_index",
          "type": "uint256"
        },
        {
          "internalType": "uint8",
          "name": "_value",
          "type": "uint8"
        }
      ],
      "name": "alterNumber8bit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getNumbers8bit",
      "outputs": [
        {
          "internalType": "uint8[]",
          "name": "",
          "type": "uint8[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        }
      ],
      "name": "getPerson",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        },
        {
          "internalType": "string[]",
          "name": "",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_bytes32Val",
          "type": "bytes"
        }
      ],
      "name": "keccakBytesHash",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retrieveValue",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8[]",
          "name": "_numbers8bit",
          "type": "uint8[]"
        }
      ],
      "name": "setNumbers8bit",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "_age",
          "type": "uint8"
        },
        {
          "internalType": "uint8",
          "name": "_heightInCm",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "_senior",
          "type": "bool"
        },
        {
          "internalType": "string[]",
          "name": "_hobbies",
          "type": "string[]"
        }
      ],
      "name": "setPerson",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_address",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "uint8",
              "name": "age",
              "type": "uint8"
            },
            {
              "internalType": "uint8",
              "name": "heightInCm",
              "type": "uint8"
            },
            {
              "internalType": "bool",
              "name": "senior",
              "type": "bool"
            },
            {
              "internalType": "string[]",
              "name": "hobbies",
              "type": "string[]"
            }
          ],
          "internalType": "struct Box.Person",
          "name": "_person",
          "type": "tuple"
        }
      ],
      "name": "setPersonStruct",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "storeValue",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "transactionHash": "0x9619e77618fb9e6fb06862f4e648a9ed124b9ac204bd99cccf0700111c46638c",
  "receipt": {
    "to": null,
    "from": "0xf39Fd6e51aad88F6F4ce6aB8827279cffFb92266",
    "contractAddress": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
    "transactionIndex": 0,
    "gasUsed": "1055423",
    "logsBloom": "0x
    "blockHash": "0x2ecc8062b380647f6bd66c2a2f6780de105762ee089ca43368ff4e274e6d18f3",
    "transactionHash": "0x9619e77618fb9e6fb06862f4e648a9ed124b9ac204bd99cccf0700111c46638c",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 8,
        "transactionHash": "0x9619e77618fb9e6fb06862f4e648a9ed124b9ac204bd99cccf0700111c46638c",
        "address": "0xa513E6E4b8f2a923D98304ec87F64353C4D5C853",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x000000000000000000000000f39fd6e51aad88f6f4ce6ab8827279cfffb92266"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0x2ecc8062b380647f6bd66c2a2f6780de105762ee089ca43368ff4e274e6d18f3"
      }
    ],
    "blockNumber": 8,
    "cumulativeGasUsed": "1055423",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "numDeployments": 1,
  "solcInputHash": "936dfac8dc60934818cbc6a2d5f53853",
  "metadata": "{\"compiler\":{\"version\":\"0.8.8+commit.dddeac2f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"ValueChanged\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"_indexes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint8[]\",\"name\":\"_values\",\"type\":\"uint8[]\"}],\"name\":\"alterMultipleNumbers8bit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_index\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_value\",\"type\":\"uint8\"}],\"name\":\"alterNumber8bit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getNumbers8bit\",\"outputs\":[{\"internalType\":\"uint8[]\",\"name\":\"\",\"type\":\"uint8[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"getPerson\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"},{\"internalType\":\"string[]\",\"name\":\"\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_bytes32Val\",\"type\":\"bytes\"}],\"name\":\"keccakBytesHash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieveValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8[]\",\"name\":\"_numbers8bit\",\"type\":\"uint8[]\"}],\"name\":\"setNumbers8bit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"_age\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"_heightInCm\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"_senior\",\"type\":\"bool\"},{\"internalType\":\"string[]\",\"name\":\"_hobbies\",\"type\":\"string[]\"}],\"name\":\"setPerson\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint8\",\"name\":\"age\",\"type\":\"uint8\"},{\"internalType\":\"uint8\",\"name\":\"heightInCm\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"senior\",\"type\":\"bool\"},{\"internalType\":\"string[]\",\"name\":\"hobbies\",\"type\":\"string[]\"}],\"internalType\":\"struct Box.Person\",\"name\":\"_person\",\"type\":\"tuple\"}],\"name\":\"setPersonStruct\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"storeValue\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Box.sol\":\"Box\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1000},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby disabling any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/Box.sol\":{\"content\":\"// contracts/Box.sol\\n// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ncontract Box is Ownable {\\n    uint8[] private numbers8bit;\\n    uint256 private value;\\n    bytes32 private currentHash;\\n\\n    function keccakBytesHash(bytes memory _bytes32Val) public onlyOwner {\\n        currentHash = keccak256(_bytes32Val);\\n    }\\n\\n    struct Person {\\n        string name;\\n        uint8 age;\\n        uint8 heightInCm;\\n        bool senior;\\n        string[] hobbies;\\n    }\\n\\n    mapping(address => Person) private people;\\n\\n    function setNumbers8bit(uint8[] memory _numbers8bit) public onlyOwner {\\n        numbers8bit = _numbers8bit;\\n    }\\n\\n    function alterNumber8bit(uint256 _index, uint8 _value) public onlyOwner {\\n        numbers8bit[_index] = _value;\\n    }\\n\\n    function alterMultipleNumbers8bit(\\n        uint256[] memory _indexes,\\n        uint8[] memory _values\\n    ) public onlyOwner {\\n        for (uint256 i = 0; i < _indexes.length; i++) {\\n            numbers8bit[_indexes[i]] = _values[i];\\n        }\\n    }\\n\\n    function getNumbers8bit() public view returns (uint8[] memory) {\\n        return numbers8bit;\\n    }\\n\\n    function setPersonStruct(\\n        address _address,\\n        Person memory _person\\n    ) public onlyOwner {\\n        people[_address] = _person;\\n    }\\n\\n    function setPerson(\\n        address _address,\\n        string memory _name,\\n        uint8 _age,\\n        uint8 _heightInCm,\\n        bool _senior,\\n        string[] memory _hobbies\\n    ) public onlyOwner {\\n        Person memory person = Person({\\n            name: _name,\\n            age: _age,\\n            heightInCm: _heightInCm,\\n            senior: _senior,\\n            hobbies: _hobbies\\n        });\\n\\n        people[_address] = person;\\n    }\\n\\n    function getPerson(\\n        address _address\\n    ) public view returns (string memory, uint8, uint8, bool, string[] memory) {\\n        Person memory person = people[_address];\\n        return (\\n            person.name,\\n            person.age,\\n            person.heightInCm,\\n            person.senior,\\n            person.hobbies\\n        );\\n    }\\n\\n    // Emitted when the stored value changes\\n    event ValueChanged(uint256 newValue);\\n\\n    // Stores a new value in the contract\\n    function storeValue(uint256 newValue) public onlyOwner {\\n        value = newValue;\\n        emit ValueChanged(newValue);\\n    }\\n\\n    // Reads the last stored value\\n    function retrieveValue() public view returns (uint256) {\\n        return value;\\n    }\\n}\\n\",\"keccak256\":\"0xf26b9d2792cb15b6e16a5f5a76eecb5fa9fe77ded6d5cf3dcde2010dfe787bef\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061001a3361001f565b61006f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6111af8061007e6000396000f3fe608060405234801561001057600080fd5b50600436106100df5760003560e01c80637221a26a1161008c5780638da5cb5b116100665780638da5cb5b146101a05780639f38b9c8146101bb578063c4707ebe146101ce578063f2fde38b146101e157600080fd5b80637221a26a14610169578063861cef3f1461017c5780638bdc4f231461018f57600080fd5b8063552d2d5c116100bd578063552d2d5c1461012a57806368141a5f1461014e578063715018a61461016157600080fd5b806309854291146100e45780631046280b14610102578063332a5bc114610117575b600080fd5b6100ec6101f4565b6040516100f99190610a7f565b60405180910390f35b610115610110366004610be2565b61026a565b005b610115610125366004610c9b565b610306565b61013d610138366004610cef565b610325565b6040516100f9959493929190610d5e565b61011561015c366004610ef5565b610524565b6101156105c2565b610115610177366004610fcc565b6105d6565b61011561018a366004610fe5565b610619565b6002546040519081526020016100f9565b6000546040516001600160a01b0390911681526020016100f9565b6101156101c936600461102e565b61062e565b6101156101dc36600461105a565b610678565b6101156101ef366004610cef565b610749565b6060600180548060200260200160405190810160405280929190818152602001828054801561026057602002820191906000526020600020906000905b825461010083900a900460ff168152602060019283018181049485019490930390920291018084116102315790505b5050505050905090565b6102726107de565b60005b825181101561030157818181518110610290576102906110ff565b602002602001015160018483815181106102ac576102ac6110ff565b6020026020010151815481106102c4576102c46110ff565b90600052602060002090602091828204019190066101000a81548160ff021916908360ff16021790555080806102f990611115565b915050610275565b505050565b61030e6107de565b80516103219060019060208401906108a0565b5050565b606060008060006060600060046000886001600160a01b03166001600160a01b031681526020019081526020016000206040518060a00160405290816000820180546103709061113e565b80601f016020809104026020016040519081016040528092919081815260200182805461039c9061113e565b80156103e95780601f106103be576101008083540402835291602001916103e9565b820191906000526020600020905b8154815290600101906020018083116103cc57829003601f168201915b5050509183525050600182015460ff808216602080850191909152610100830482166040808601919091526201000090930490911615156060840152600284018054835181840281018401909452808452608090940193909160009084015b828210156104f45783829060005260206000200180546104679061113e565b80601f01602080910402602001604051908101604052809291908181526020018280546104939061113e565b80156104e05780601f106104b5576101008083540402835291602001916104e0565b820191906000526020600020905b8154815290600101906020018083116104c357829003601f168201915b505050505081526020019060010190610448565b505050915250508051602082015160408301516060840151608090940151929b919a509850919650945092505050565b61052c6107de565b6001600160a01b038216600090815260046020908152604090912082518051849361055b928492910190610946565b50602082810151600183018054604086015160608701511515620100000262ff00001960ff9283166101000261ffff1990941692909516919091179190911792909216919091179055608083015180516105bb92600285019201906109ba565b5050505050565b6105ca6107de565b6105d46000610838565b565b6105de6107de565b60028190556040518181527f93fe6d397c74fdf1402a8b72e47b68512f0510d7b98a4bc4cbdf6ac7108b3c599060200160405180910390a150565b6106216107de565b8051602090910120600355565b6106366107de565b806001838154811061064a5761064a6110ff565b90600052602060002090602091828204019190066101000a81548160ff021916908360ff1602179055505050565b6106806107de565b6040805160a08101825286815260ff808716602080840191909152908616828401528415156060830152608082018490526001600160a01b0389166000908152600482529290922081518051929384936106dd9284920190610946565b50602082810151600183018054604086015160608701511515620100000262ff00001960ff9283166101000261ffff19909416929095169190911791909117929092169190911790556080830151805161073d92600285019201906109ba565b50505050505050505050565b6107516107de565b6001600160a01b0381166107d25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6107db81610838565b50565b6000546001600160a01b031633146105d45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107c9565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090601f016020900481019282156109365791602002820160005b8382111561090757835183826101000a81548160ff021916908360ff16021790555092602001926001016020816000010492830192600103026108c9565b80156109345782816101000a81549060ff0219169055600101602081600001049283019260010302610907565b505b50610942929150610a13565b5090565b8280546109529061113e565b90600052602060002090601f0160209004810192826109745760008555610936565b82601f1061098d57805160ff1916838001178555610936565b82800160010185558215610936579182015b8281111561093657825182559160200191906001019061099f565b828054828255906000526020600020908101928215610a07579160200282015b82811115610a0757825180516109f7918491602090910190610946565b50916020019190600101906109da565b50610942929150610a28565b5b808211156109425760008155600101610a14565b80821115610942576000610a3c8282610a45565b50600101610a28565b508054610a519061113e565b6000825580601f10610a61575050565b601f0160209004906000526020600020908101906107db9190610a13565b6020808252825182820181905260009190848201906040850190845b81811015610aba57835160ff1683529284019291840191600101610a9b565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715610aff57610aff610ac6565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610b2e57610b2e610ac6565b604052919050565b600067ffffffffffffffff821115610b5057610b50610ac6565b5060051b60200190565b803560ff81168114610b6b57600080fd5b919050565b600082601f830112610b8157600080fd5b81356020610b96610b9183610b36565b610b05565b82815260059290921b84018101918181019086841115610bb557600080fd5b8286015b84811015610bd757610bca81610b5a565b8352918301918301610bb9565b509695505050505050565b60008060408385031215610bf557600080fd5b823567ffffffffffffffff80821115610c0d57600080fd5b818501915085601f830112610c2157600080fd5b81356020610c31610b9183610b36565b82815260059290921b84018101918181019089841115610c5057600080fd5b948201945b83861015610c6e57853582529482019490820190610c55565b96505086013592505080821115610c8457600080fd5b50610c9185828601610b70565b9150509250929050565b600060208284031215610cad57600080fd5b813567ffffffffffffffff811115610cc457600080fd5b610cd084828501610b70565b949350505050565b80356001600160a01b0381168114610b6b57600080fd5b600060208284031215610d0157600080fd5b610d0a82610cd8565b9392505050565b6000815180845260005b81811015610d3757602081850181015186830182015201610d1b565b81811115610d49576000602083870101525b50601f01601f19169290920160200192915050565b60a081526000610d7160a0830188610d11565b602060ff88168185015260ff87166040850152851515606085015283820360808501528185518084528284019150828160051b85010183880160005b83811015610ddb57601f19878403018552610dc9838351610d11565b94860194925090850190600101610dad565b50909c9b505050505050505050505050565b600067ffffffffffffffff831115610e0757610e07610ac6565b610e1a601f8401601f1916602001610b05565b9050828152838383011115610e2e57600080fd5b828260208301376000602084830101529392505050565b600082601f830112610e5657600080fd5b610d0a83833560208501610ded565b80358015158114610b6b57600080fd5b600082601f830112610e8657600080fd5b81356020610e96610b9183610b36565b82815260059290921b84018101918181019086841115610eb557600080fd5b8286015b84811015610bd757803567ffffffffffffffff811115610ed95760008081fd5b610ee78986838b0101610e45565b845250918301918301610eb9565b60008060408385031215610f0857600080fd5b610f1183610cd8565b9150602083013567ffffffffffffffff80821115610f2e57600080fd5b9084019060a08287031215610f4257600080fd5b610f4a610adc565b823582811115610f5957600080fd5b610f6588828601610e45565b825250610f7460208401610b5a565b6020820152610f8560408401610b5a565b6040820152610f9660608401610e65565b6060820152608083013582811115610fad57600080fd5b610fb988828601610e75565b6080830152508093505050509250929050565b600060208284031215610fde57600080fd5b5035919050565b600060208284031215610ff757600080fd5b813567ffffffffffffffff81111561100e57600080fd5b8201601f8101841361101f57600080fd5b610cd084823560208401610ded565b6000806040838503121561104157600080fd5b8235915061105160208401610b5a565b90509250929050565b60008060008060008060c0878903121561107357600080fd5b61107c87610cd8565b9550602087013567ffffffffffffffff8082111561109957600080fd5b6110a58a838b01610e45565b96506110b360408a01610b5a565b95506110c160608a01610b5a565b94506110cf60808a01610e65565b935060a08901359150808211156110e557600080fd5b506110f289828a01610e75565b9150509295509295509295565b634e487b7160e01b600052603260045260246000fd5b600060001982141561113757634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c9082168061115257607f821691505b6020821081141561117357634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220639547dc158e17b5b65955da82997e925d1b8a59959073b53131f562dc08d86b64736f6c63430008080033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100df5760003560e01c80637221a26a1161008c5780638da5cb5b116100665780638da5cb5b146101a05780639f38b9c8146101bb578063c4707ebe146101ce578063f2fde38b146101e157600080fd5b80637221a26a14610169578063861cef3f1461017c5780638bdc4f231461018f57600080fd5b8063552d2d5c116100bd578063552d2d5c1461012a57806368141a5f1461014e578063715018a61461016157600080fd5b806309854291146100e45780631046280b14610102578063332a5bc114610117575b600080fd5b6100ec6101f4565b6040516100f99190610a7f565b60405180910390f35b610115610110366004610be2565b61026a565b005b610115610125366004610c9b565b610306565b61013d610138366004610cef565b610325565b6040516100f9959493929190610d5e565b61011561015c366004610ef5565b610524565b6101156105c2565b610115610177366004610fcc565b6105d6565b61011561018a366004610fe5565b610619565b6002546040519081526020016100f9565b6000546040516001600160a01b0390911681526020016100f9565b6101156101c936600461102e565b61062e565b6101156101dc36600461105a565b610678565b6101156101ef366004610cef565b610749565b6060600180548060200260200160405190810160405280929190818152602001828054801561026057602002820191906000526020600020906000905b825461010083900a900460ff168152602060019283018181049485019490930390920291018084116102315790505b5050505050905090565b6102726107de565b60005b825181101561030157818181518110610290576102906110ff565b602002602001015160018483815181106102ac576102ac6110ff565b6020026020010151815481106102c4576102c46110ff565b90600052602060002090602091828204019190066101000a81548160ff021916908360ff16021790555080806102f990611115565b915050610275565b505050565b61030e6107de565b80516103219060019060208401906108a0565b5050565b606060008060006060600060046000886001600160a01b03166001600160a01b031681526020019081526020016000206040518060a00160405290816000820180546103709061113e565b80601f016020809104026020016040519081016040528092919081815260200182805461039c9061113e565b80156103e95780601f106103be576101008083540402835291602001916103e9565b820191906000526020600020905b8154815290600101906020018083116103cc57829003601f168201915b5050509183525050600182015460ff808216602080850191909152610100830482166040808601919091526201000090930490911615156060840152600284018054835181840281018401909452808452608090940193909160009084015b828210156104f45783829060005260206000200180546104679061113e565b80601f01602080910402602001604051908101604052809291908181526020018280546104939061113e565b80156104e05780601f106104b5576101008083540402835291602001916104e0565b820191906000526020600020905b8154815290600101906020018083116104c357829003601f168201915b505050505081526020019060010190610448565b505050915250508051602082015160408301516060840151608090940151929b919a509850919650945092505050565b61052c6107de565b6001600160a01b038216600090815260046020908152604090912082518051849361055b928492910190610946565b50602082810151600183018054604086015160608701511515620100000262ff00001960ff9283166101000261ffff1990941692909516919091179190911792909216919091179055608083015180516105bb92600285019201906109ba565b5050505050565b6105ca6107de565b6105d46000610838565b565b6105de6107de565b60028190556040518181527f93fe6d397c74fdf1402a8b72e47b68512f0510d7b98a4bc4cbdf6ac7108b3c599060200160405180910390a150565b6106216107de565b8051602090910120600355565b6106366107de565b806001838154811061064a5761064a6110ff565b90600052602060002090602091828204019190066101000a81548160ff021916908360ff1602179055505050565b6106806107de565b6040805160a08101825286815260ff808716602080840191909152908616828401528415156060830152608082018490526001600160a01b0389166000908152600482529290922081518051929384936106dd9284920190610946565b50602082810151600183018054604086015160608701511515620100000262ff00001960ff9283166101000261ffff19909416929095169190911791909117929092169190911790556080830151805161073d92600285019201906109ba565b50505050505050505050565b6107516107de565b6001600160a01b0381166107d25760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201527f646472657373000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b6107db81610838565b50565b6000546001600160a01b031633146105d45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016107c9565b600080546001600160a01b038381167fffffffffffffffffffffffff0000000000000000000000000000000000000000831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b82805482825590600052602060002090601f016020900481019282156109365791602002820160005b8382111561090757835183826101000a81548160ff021916908360ff16021790555092602001926001016020816000010492830192600103026108c9565b80156109345782816101000a81549060ff0219169055600101602081600001049283019260010302610907565b505b50610942929150610a13565b5090565b8280546109529061113e565b90600052602060002090601f0160209004810192826109745760008555610936565b82601f1061098d57805160ff1916838001178555610936565b82800160010185558215610936579182015b8281111561093657825182559160200191906001019061099f565b828054828255906000526020600020908101928215610a07579160200282015b82811115610a0757825180516109f7918491602090910190610946565b50916020019190600101906109da565b50610942929150610a28565b5b808211156109425760008155600101610a14565b80821115610942576000610a3c8282610a45565b50600101610a28565b508054610a519061113e565b6000825580601f10610a61575050565b601f0160209004906000526020600020908101906107db9190610a13565b6020808252825182820181905260009190848201906040850190845b81811015610aba57835160ff1683529284019291840191600101610a9b565b50909695505050505050565b634e487b7160e01b600052604160045260246000fd5b60405160a0810167ffffffffffffffff81118282101715610aff57610aff610ac6565b60405290565b604051601f8201601f1916810167ffffffffffffffff81118282101715610b2e57610b2e610ac6565b604052919050565b600067ffffffffffffffff821115610b5057610b50610ac6565b5060051b60200190565b803560ff81168114610b6b57600080fd5b919050565b600082601f830112610b8157600080fd5b81356020610b96610b9183610b36565b610b05565b82815260059290921b84018101918181019086841115610bb557600080fd5b8286015b84811015610bd757610bca81610b5a565b8352918301918301610bb9565b509695505050505050565b60008060408385031215610bf557600080fd5b823567ffffffffffffffff80821115610c0d57600080fd5b818501915085601f830112610c2157600080fd5b81356020610c31610b9183610b36565b82815260059290921b84018101918181019089841115610c5057600080fd5b948201945b83861015610c6e57853582529482019490820190610c55565b96505086013592505080821115610c8457600080fd5b50610c9185828601610b70565b9150509250929050565b600060208284031215610cad57600080fd5b813567ffffffffffffffff811115610cc457600080fd5b610cd084828501610b70565b949350505050565b80356001600160a01b0381168114610b6b57600080fd5b600060208284031215610d0157600080fd5b610d0a82610cd8565b9392505050565b6000815180845260005b81811015610d3757602081850181015186830182015201610d1b565b81811115610d49576000602083870101525b50601f01601f19169290920160200192915050565b60a081526000610d7160a0830188610d11565b602060ff88168185015260ff87166040850152851515606085015283820360808501528185518084528284019150828160051b85010183880160005b83811015610ddb57601f19878403018552610dc9838351610d11565b94860194925090850190600101610dad565b50909c9b505050505050505050505050565b600067ffffffffffffffff831115610e0757610e07610ac6565b610e1a601f8401601f1916602001610b05565b9050828152838383011115610e2e57600080fd5b828260208301376000602084830101529392505050565b600082601f830112610e5657600080fd5b610d0a83833560208501610ded565b80358015158114610b6b57600080fd5b600082601f830112610e8657600080fd5b81356020610e96610b9183610b36565b82815260059290921b84018101918181019086841115610eb557600080fd5b8286015b84811015610bd757803567ffffffffffffffff811115610ed95760008081fd5b610ee78986838b0101610e45565b845250918301918301610eb9565b60008060408385031215610f0857600080fd5b610f1183610cd8565b9150602083013567ffffffffffffffff80821115610f2e57600080fd5b9084019060a08287031215610f4257600080fd5b610f4a610adc565b823582811115610f5957600080fd5b610f6588828601610e45565b825250610f7460208401610b5a565b6020820152610f8560408401610b5a565b6040820152610f9660608401610e65565b6060820152608083013582811115610fad57600080fd5b610fb988828601610e75565b6080830152508093505050509250929050565b600060208284031215610fde57600080fd5b5035919050565b600060208284031215610ff757600080fd5b813567ffffffffffffffff81111561100e57600080fd5b8201601f8101841361101f57600080fd5b610cd084823560208401610ded565b6000806040838503121561104157600080fd5b8235915061105160208401610b5a565b90509250929050565b60008060008060008060c0878903121561107357600080fd5b61107c87610cd8565b9550602087013567ffffffffffffffff8082111561109957600080fd5b6110a58a838b01610e45565b96506110b360408a01610b5a565b95506110c160608a01610b5a565b94506110cf60808a01610e65565b935060a08901359150808211156110e557600080fd5b506110f289828a01610e75565b9150509295509295509295565b634e487b7160e01b600052603260045260246000fd5b600060001982141561113757634e487b7160e01b600052601160045260246000fd5b5060010190565b600181811c9082168061115257607f821691505b6020821081141561117357634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220639547dc158e17b5b65955da82997e925d1b8a59959073b53131f562dc08d86b64736f6c63430008080033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/Box.sol:Box",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 142,
        "contract": "contracts/Box.sol:Box",
        "label": "numbers8bit",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint8)dyn_storage"
      },
      {
        "astId": 144,
        "contract": "contracts/Box.sol:Box",
        "label": "value",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 146,
        "contract": "contracts/Box.sol:Box",
        "label": "currentHash",
        "offset": 0,
        "slot": "3",
        "type": "t_bytes32"
      },
      {
        "astId": 177,
        "contract": "contracts/Box.sol:Box",
        "label": "people",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_struct(Person)172_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_array(t_uint8)dyn_storage": {
        "base": "t_uint8",
        "encoding": "dynamic_array",
        "label": "uint8[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_struct(Person)172_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct Box.Person)",
        "numberOfBytes": "32",
        "value": "t_struct(Person)172_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Person)172_storage": {
        "encoding": "inplace",
        "label": "struct Box.Person",
        "members": [
          {
            "astId": 162,
            "contract": "contracts/Box.sol:Box",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 164,
            "contract": "contracts/Box.sol:Box",
            "label": "age",
            "offset": 0,
            "slot": "1",
            "type": "t_uint8"
          },
          {
            "astId": 166,
            "contract": "contracts/Box.sol:Box",
            "label": "heightInCm",
            "offset": 1,
            "slot": "1",
            "type": "t_uint8"
          },
          {
            "astId": 168,
            "contract": "contracts/Box.sol:Box",
            "label": "senior",
            "offset": 2,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 171,
            "contract": "contracts/Box.sol:Box",
            "label": "hobbies",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_string_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "96"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  }
}